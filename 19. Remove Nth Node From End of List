//
用正序获得倒数第几个的思路
//
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        
        ListNode* current = new ListNode(0);
        current->next = head;
     
        vector<ListNode*> bb;
        
        while(current !=NULL){
            
            bb.push_back(current);
            
            current = current->next;

        }
        
        int index = bb.size()-n;
        
        bb[index-1]->next= index+1<bb.size()? bb[index+1]:NULL;
        
        return bb[0]->next;
        
    }
};

==================================================================================================

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *fast = head, *slow = head;
        while(fast){
            fast = fast->next;
            if(n-- < 0) slow = slow->next;
        }
        if(n == 0) head = head->next;
        else slow->next = slow->next->next;
        return head;
    }
};
