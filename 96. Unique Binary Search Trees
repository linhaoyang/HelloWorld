class Solution {
public:

	map<int, int> dp;

	int numTrees(int n) {

		if (dp.find(n) != dp.end()) {
			return dp[n];
		}

		if (n <= 1) {
			return 1;
		}

		int num = 0;

		for (int i = 0; i<n; i++) {

			int left = i;
			int right = n - i - 1;

			num += numTrees(left) * numTrees(right);
		}

		//cout << "n:" << n << "num:" << num << endl;
		dp[n] = num;
		return num;

	}
};


=================================================================================================================

推导

public int numTrees(int n) {
    int [] G = new int[n+1];
    G[0] = G[1] = 1;
    
    for(int i=2; i<=n; ++i) {
    	for(int j=1; j<=i; ++j) {
    		G[i] += G[j-1] * G[i-j];
    	}
    }

    return G[n];
}
