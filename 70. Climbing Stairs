Fibonacci!!!!!!!!!

public class Solution {
    public int climbStairs(int n) {
        if (n == 1) {
            return 1;
        }
        int first = 1;
        int second = 2;
        for (int i = 3; i <= n; i++) {
            int third = first + second;
            first = second;
            second = third;
        }
        return second;
    }
}

===============================================================================================================

class Solution {
public:
    
    map<int,int> mp;
    
    int climbStairs(int n) {
        
        if(n <=1){
            return 1;
        }
        
        map<int, int>::iterator it_find = mp.find(n);
        if(it_find != mp.end()){
            return it_find->second;
        }
        
        int result = climbStairs(n-1)+climbStairs(n-2);
        
        mp[n] = result;
        
        return result;
    }
};

===========================================================================================================

public class Solution {
    public int climbStairs(int n) {
        if (n == 1) {
            return 1;
        }
        int[] dp = new int[n + 1];
        dp[1] = 1;
        dp[2] = 2;
        for (int i = 3; i <= n; i++) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[n];
    }
}
