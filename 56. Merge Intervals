

/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */

bool cmp( Interval A, Interval B ){
    return A.start < B.start;
    
}
class Solution {
public:
    vector<Interval> merge(vector<Interval>& intervals) {
        sort( intervals.begin(), intervals.end(), cmp );
        vector<Interval> ret;
        for ( int i = 0 ; i < intervals.size() ; i++ ){
            int a = intervals[i].start;
            int b = intervals[i].end;
            while ( i + 1 < intervals.size() && intervals[i+1].start <= b ){
                b = max( b, intervals[i+1].end );
                i++;
            }
            ret.push_back( Interval(a, b) );  
            
        }
        return ret;
    }
};
